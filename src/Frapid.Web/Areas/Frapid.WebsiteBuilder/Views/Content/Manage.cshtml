@model Frapid.WebsiteBuilder.Entities.Content

@{
    bool isMarkDown = !string.IsNullOrWhiteSpace(Model.Markdown);
    ViewBag.Title = Model.Title;
    Layout = ViewBag.Layout;
}
<link href="/my/template/css/site.css" rel="stylesheet">
<script src="/Scripts/ace-1.2.2/src-min-noconflict/ace.js"></script>
<script src="/Scripts/marked-0.3.5/lib/marked.js"></script>

<div class="ui attached segment" style="height: 100%;">
    <div class="ui stackable divided doubling grid" style="height: 100%;">
        <div class="three wide column">
            <div class="ui one column grid">
                <div class="right aligned column">
                    <button class="ui icon basic violet circular button" onclick="maximize('editor', '');">
                        <i class="code icon"></i>
                    </button>
                    <button class="ui icon violet circular button" onclick="maximize('preview', '');">
                        <i class="expand icon"></i>
                    </button>
                </div>
            </div>
            <div class="column">
                <div class="ui violet header">Save This Page</div>
            </div>
            <div class="ui divider"></div>
            <div wi class="ui form">
                <input type="hidden" data-entity="content_id" class="integer" value="@Model.ContentId" />
                <input type="hidden" data-entity="markdown" value="@Model.Markdown" />
                <div class="">
                    <div class="field">
                        <label>Title</label>
                        <input type="text" data-entity="title" value="@Model.Title" required="" />
                    </div>
                    <div class="field">
                        <label>Alias</label>
                        <input type="text" data-entity="alias" value="@Model.Alias" required="" />
                    </div>
                    <div class="field">
                        <label>Category</label>
                        <select id="CategorySelect" class="ui search integer dropdown"
                                data-entity="category_id"
                                required=""
                                data-placeholder="true"
                                data-api="/api/website/category/display-fields"
                                data-api-value-field="Value"
                                data-api-key-field="Key"
                                data-api-selected-value="@Model.CategoryId"></select>
                    </div>
                    <div class="field">
                        <label>Tags</label>
                        <select id="TagsSelect" class="ui fluid multiple search selection tag dropdown"
                                data-entity="tags"
                                data-api="/api/website/tag-view/all"
                                data-api-value-field="Tag"
                                data-api-key-field="Tag"
                                data-api-selected-values="@Model.Tags"
                                multiple=""></select>
                    </div>
                    <div class="field">
                        <label>Publish On</label>
                        <input type="date" class="date" data-entity="publish_on" value="@Model.PublishOn.ToShortDateString()" required="" />
                    </div>
                    <div class="field">
                        <label>Seo Keywords</label>
                        <input type="text" data-entity="seo_keywords" value="@Model.SeoKeywords" required="" />
                    </div>
                    <div class="field">
                        <label>Seo Description</label>
                        <input type="text" data-entity="seo_description" value="@Model.SeoDescription" required="" />
                    </div>
                </div>
                <div class="field">
                    <label>&nbsp;</label>
                    <div class="ui checkbox">
                        @Html.CheckBox("IsDraftInputCheckbox", Model.IsDraft, new { @id = "IsDraftInputCheckbox", @data_entity = "is_draft" })
                        <label for="IsDraftInputCheckbox">Draft</label>
                    </div>
                    <div class="ui checkbox">
                        @Html.CheckBox("IsHomePageInputCheckbox", Model.IsHomepage, new { @id = "IsHomePageInputCheckbox", @data_entity = "is_homepage" })
                        <label for="IsHomePageInputCheckbox">Home Page</label>
                    </div>
                    <div class="ui checkbox">
                        @Html.CheckBox("IsMarkdownInputCheckbox", isMarkDown, new { @id = "IsMarkdownInputCheckbox" })
                        <label for="IsMarkdownInputCheckbox">Is Markdown</label>
                    </div>
                </div>
                <div class="ui basic buttons">
                    <button class="ui basic button" id="SaveButton">Save</button>
                    <a class="ui basic button" ng-href="../contents">Cancel</a>
                </div>
            </div>

            <div class="ui container">
                <div class="error vpad8 initially hidden">
                    <div class="ui brown header">Error</div>
                    <div class="ui red bulleted list">
                    </div>
                    <div class="ui divider"></div>
                </div>
            </div>

        </div>
        <div class="thirteen wide column" style="height: 100%;">
            <div class="ui stackable two column divided grid" style="height: 100%;">
                <div class="column" data-target="editor" style="height: 100%;">
                    <div id="editor">
                    </div>
                </div>
                <div class="column" style="height: 100%; overflow: auto;" data-target="preview">
                    <div id="content" class="body" data-entity="contents" data-raw="true">
                        @Html.Raw(Model.Contents)
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


<script>
    var html = "@Html.Encode(HttpUtility.JavaScriptStringEncode(Model.Contents))";
</script>


<script src="~/Areas/Frapid.WebsiteBuilder/Scripts/Contents/EntityParser.js"></script>
<script src="~/Areas/Frapid.WebsiteBuilder/Scripts/Contents/Manage.js"></script>
